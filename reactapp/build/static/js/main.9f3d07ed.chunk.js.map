{"version":3,"sources":["components/UI/Banner/Banner.js","components/UI/Button/Button.js","App.js","reportWebVitals.js","index.js"],"names":["Banner","_jsx","_Fragment","children","Button","ButtonProps","onClick","App","Questionbank","Question","Answers","Answer","isCorrect","_useState","useState","_useState2","_slicedToArray","currentQuestion","setCurrentQuestion","_useState3","_useState4","score","setScore","_useState5","_useState6","showScore","setShowScore","_useState7","_useState8","showQuiz","setShowQuiz","_useState9","_useState10","_useState11","_useState12","setQuestionsCorrect","_jsxs","className","href","target","rel","length","type","text","map","answer","nextQuestion","handleAnswerResponse","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"0LAAaA,EAAS,WAClB,OAAOC,cAAAC,WAAA,CAAAC,SACPF,cAAA,OAAAE,SAAK,OAGT,ECiBeC,EAJA,SAACC,GACZ,OAAQJ,cAAA,UAAQK,QAAWD,EAAYC,QAAQH,SAAEE,EAAYF,UACjE,EC2IeI,G,MAzJH,WACR,IAAIC,EAAe,CACf,CACIC,SAAU,qCACVC,QAAS,CACL,CAAEC,OAAQ,iBAAkBC,WAAW,GACvC,CAAED,OAAQ,mBAAoBC,WAAW,GACzC,CAAED,OAAQ,eAAgBC,WAAW,GACrC,CAAED,OAAQ,gBAAiBC,WAAW,KAG9C,CACIH,SAAU,gCACVC,QAAS,CACL,CAAEC,OAAQ,OAAQC,WAAW,GAC7B,CAAED,OAAQ,MAAOC,WAAW,GAC5B,CAAED,OAAQ,SAAUC,WAAW,GAC/B,CAAED,OAAQ,QAASC,WAAW,KAEnC,CACCH,SAAU,yBACVC,QAAS,CACL,CAAEC,OAAQ,OAAQC,WAAW,GAC7B,CAAED,OAAQ,MAAOC,WAAW,GAC5B,CAAED,OAAQ,SAAUC,WAAW,GAC/B,CAAED,OAAQ,QAASC,WAAW,KAGtC,CACIH,SAAU,0BACVC,QAAS,CACL,CAAEC,OAAQ,OAAQC,WAAW,GAC7B,CAAED,OAAQ,MAAOC,WAAW,GAC5B,CAAED,OAAQ,SAAUC,WAAW,GAC/B,CAAED,OAAQ,QAASC,WAAW,KAGtC,CACIH,SAAU,2BACVC,QAAS,CACL,CAAEC,OAAQ,OAAQC,WAAW,GAC7B,CAAED,OAAQ,MAAOC,WAAW,GAC5B,CAAED,OAAQ,SAAUC,WAAW,GAC/B,CAAED,OAAQ,QAASC,WAAW,MAM1CC,EAA8CC,mBAAS,GAAEC,EAAAC,YAAAH,EAAA,GAAlDI,EAAeF,EAAA,GAAEG,EAAkBH,EAAA,GAC1CI,EAA0BL,mBAAS,GAAEM,EAAAJ,YAAAG,EAAA,GAA9BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,EAAkCT,oBAAS,GAAMU,EAAAR,YAAAO,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,EAAgCb,oBAAS,GAAMc,EAAAZ,YAAAW,EAAA,GAAxCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,EAAkCjB,oBAAS,GAAMkB,EAAAhB,YAAAe,EAAA,GACjDE,GADgBD,EAAA,GAAcA,EAAA,GACkBlB,mBAAS,IAAEoB,EAAAlB,YAAAiB,EAAA,GAAlCE,GAAFD,EAAA,GAAqBA,EAAA,IA8C5C,OACIE,eAAA,OAAKC,UAAU,MAAKlC,SAAA,CACrBF,cAAA,KACGoC,UAAU,WACVC,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAAqBrC,SAC1B,gBAGIsB,EACGW,eAAA,OAAKC,UAAU,gBAAelC,SAAA,CAC1BF,cAACD,EAAM,IAAE,qBACUqB,EAAM,MAAIb,EAAaiC,OAAO,aACjDxC,cAAAC,WAAA,CAAAC,SACGF,cAACG,EAAM,CAACsC,KAAK,SAASpC,QAtB7B,WAEZY,EAAmB,GACnBI,EAAS,GACTI,GAAa,EACjB,EAiBiEiB,KAAO,oBAKpDP,eAAAlC,WAAA,CAAAC,SAAA,CACAF,cAAA,MAAAE,SAAI,eACA0B,GAAY5B,cAACG,EAAM,CAAEE,QAAS,WA3D9CwB,GAAY,EA2D0D,EAAEa,KAAO,eAChEd,GACCO,eAAA,OAAAjC,SAAA,CACAiC,eAAA,OAAKC,UAAU,mBAAkBlC,SAAA,CAC7BiC,eAAA,OAAKC,UAAU,iBAAgBlC,SAAA,CAC5BF,cAAA,QAAAE,SAAOc,EAAgB,IAAS,IAAET,EAAaiC,UAGlDxC,cAAA,OAAKoC,UAAU,gBAAelC,SAC5BK,EAAaS,GAAiBR,cAIpC2B,eAAA,OAAKC,UAAU,iBAAgBlC,SAAA,CAC5BK,EAAaS,GAAiBP,QAAQkC,KAAI,SAACC,GAAM,OAE9C5C,cAAA,UAAQK,QAAS,kBAxEpB,SAACM,GAErBA,IAECU,EAASD,EAAM,GACfc,EAAoBd,EAAM,IAG/B,IAAMyB,EAAc7B,EAAgB,EACjC6B,EAAatC,EAAaiC,OAE5BvB,EAAmB4B,GAGnBpB,GAAa,EAEjB,CAwDmDqB,CAAqBF,EAAOjC,UAAU,EAACT,SAAE0C,EAAOlC,QAAgB,IAE1FV,cAACG,EAAM,CAAAD,SAxDRc,EAAgB,EAClBT,EAAaiC,OACtB,eAED,0BA+DZ,GCjJeO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,SAAAC,GAAkD,IAA/CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,EACV,GAEJ,ECJAS,IAASC,OACP1D,cAAC2D,IAAMC,WAAU,CAAA1D,SACfF,cAACM,EAAG,MAENuD,SAASC,eAAe,SAM1Bf,G","file":"static/js/main.9f3d07ed.chunk.js","sourcesContent":["export const Banner = () => {\n    return <>\n    <div> </div>\n    </>;\n\n};","import React from 'react'\nimport { useState } from 'react';\n\nconst ButtonFunc = (text) => {\n    if(text === \"\"){\n        return \"Button Works\";\n    } else {\n        return text;\n    }\n}\n\n// const Button: React.FC<ButtonProps> = ({onClick, text}) => {\n//     return <>\n//     <button onClick= {onClick}>{ButtonFunc(text)}</button>\n//     </>;\n// };\n\n\nconst Button = (ButtonProps) => {\n    return (<button onClick = {ButtonProps.onClick}>{ButtonProps.children}</button>);\n}\n\nexport default Button;","import React from 'react'\nimport { useState } from 'react';\nimport { Banner } from './components/UI/Banner/Banner';\nimport  Button from './components/UI/Button/Button';\nimport './quizstyle.css'\n\nconst App = () => {\n    var Questionbank = [\n        {\n            Question: \"Who is the father of your nation ?\",\n            Answers: [\n                { Answer: \"Mahatma Gandhi\", isCorrect: true },\n                { Answer: \"Jawaharlal Nehru\", isCorrect: false },\n                { Answer: \"Donald Trump\", isCorrect: false },\n                { Answer: \"Barrack Obama\", isCorrect: false }\n            ]\n        },\n        {\n            Question: \"What color is are the leaves?\",\n            Answers: [\n                { Answer: \"Blue\", isCorrect: false },\n                { Answer: \"Red\", isCorrect: false },\n                { Answer: \"Yellow\", isCorrect: false },\n                { Answer: \"Green\", isCorrect: true }\n            ]\n        }, {\n            Question: \"What color is the sky \",\n            Answers: [\n                { Answer: \"Blue\", isCorrect: true },\n                { Answer: \"Red\", isCorrect: false },\n                { Answer: \"Yellow\", isCorrect: false },\n                { Answer: \"Green\", isCorrect: false }\n            ]\n        },\n        {\n            Question: \"What color is the sky ?\",\n            Answers: [\n                { Answer: \"Blue\", isCorrect: true },\n                { Answer: \"Red\", isCorrect: false },\n                { Answer: \"Yellow\", isCorrect: false },\n                { Answer: \"Green\", isCorrect: false }\n            ]\n        },\n        {\n            Question: \"What color is the fire ?\",\n            Answers: [\n                { Answer: \"Blue\", isCorrect: false },\n                { Answer: \"Red\", isCorrect: false },\n                { Answer: \"Yellow\", isCorrect: true },\n                { Answer: \"Green\", isCorrect: false }\n            ]\n        }\n    ]\n\n    //useState Hook\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n    const [score, setScore] = useState(0);\n    const [showScore, setShowScore] = useState(false);\n    const [showQuiz, setShowQuiz] = useState(false);\n    const [showStart, setShowStart] = useState(false);\n    const [questionsCorrect, setQuestionsCorrect] = useState(0);\n\n  const handleResultsButton = () => {\n      if(currentQuestion === 5){\n        setShowStart(true);\n      }\n  }  \n    \n   const handleQuizButton = () => {\n        setShowQuiz(true);\n    }\n\nconst handleAnswerResponse=(isCorrect)=>\n{\n    if(isCorrect)\n    {\n        setScore(score+1);\n        setQuestionsCorrect(score+1);\n    }\n\n   const nextQuestion= currentQuestion+1;\n   if(nextQuestion<Questionbank.length)\n   {\n    setCurrentQuestion(nextQuestion);\n   }\n   else{\n    setShowScore(true);\n   }\n}\nconst text = () => {\n    const nextQuestion= currentQuestion+1;\n    if(nextQuestion < Questionbank.length){\n      return \"Show Results\"\n    } else {                        \n     return \"Start Quiz\"\n    }\n      \n}\n\nconst resetQuiz=()=>\n{\n    setCurrentQuestion(0);\n    setScore(0);\n    setShowScore(false);\n}\n\n    return (\n        <div className='app'>\n       <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n            {showScore ? (\n                <div className='score-section'>\n                    <Banner/>\n                    You have answered {score} / {Questionbank.length} Correctly\n                    <>\n                       <Button type=\"submit\" onClick={resetQuiz} text = \"Start Quiz\"></Button>\n                    </>\n                </div>\n            )\n                : (\n                    <>\n                    <h1>Quizz App</h1>\n                      {!showQuiz && <Button  onClick={() => handleQuizButton()} text = \"Start Quiz\"></Button>}\n                      {showQuiz && (\n                        <div>\n                        <div className='question-section'>\n                            <div className='question-count'>\n                               <span>{currentQuestion+1}</span>/{Questionbank.length}\n                            </div>\n\n                            <div className='question-text'>\n                             {Questionbank[currentQuestion].Question}\n                            </div>\n                        </div>\n\n                        <div className='answer-section'>\n                          {Questionbank[currentQuestion].Answers.map((answer)=>\n                          (\n                              <button onClick={()=>handleAnswerResponse(answer.isCorrect)}>{answer.Answer}</button>\n                          ))}\n                         <Button>{text()}\n                          </Button>\n                        </div>\n                        \n                         </div>)}\n                    </>\n                )\n            }\n\n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}